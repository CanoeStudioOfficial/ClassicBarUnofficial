buildscript {
    repositories {
        jcenter()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:2.3-1.0.7'
    }
}

plugins {
    id "com.wynprice.cursemaven" version "2.1.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${mod_version}"
group = "com.tfar.classicbar" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "classicbar"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}
repositories {
    maven {
        url 'https://maven.mcmoddev.com' 
    }

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "cursemaven"
        url = "https://cursemaven.com"

    }
    }
dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    //deobfCompile "iblis:iblis:0.5.17"
    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
   // deobfProvided "randomthings:RandomThings:MC${mc_version}:4.2.7"
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    deobfCompile "com.azanor:Baubles:${baubles_version}"
    //deobfCompile "betterdiving:BetterDiving:${mc_version}-1.3.42"
    deobfProvided "curse.maven:tough-as-nails-246391:2644652"
    deobfProvided "curse.maven:random-things-59816:2667184"
    deobfProvided "curse.maven:simpledifficulty-for-underdog-574162:4651150"
    deobfCompile "curse.maven:angry-pixel-the-betweenlands-mod-243363:2766910"
    deobfCompile "curse.maven:vampirism-become-a-vampire-233029:2832151"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version

        rename '(.+_at.cfg)', 'META-INF/$1'
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
